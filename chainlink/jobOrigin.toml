type = "directrequest"
schemaVersion = 1
name = ""
maxTaskDuration = "0s"
contractAddress = "%oracle%"
minContractPaymentLinkJuels = "0"
observationSource = """
    decode_log   [type=ethabidecodelog
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]

    decode_cbor  [type=cborparse data="$(decode_log.data)"]
    fetch        [type=bridge name="verifier" requestData="{\\"id\\": $(jobSpec.externalJobID), \\"data\\": { \\"jwt\\": $(decode_cbor.jwt), \\"email\\": $(decode_cbor.email), \\"proof\\": $(decode_cbor.proof), \\"publicAddress\\": $(decode_cbor.publicAddress)}}"]
    parse_proof    [type=jsonparse path="data,proof" data="$(fetch)"] 
    parse_email    [type=jsonparse path="data,email" data="$(fetch)"]
    parse_publicAddress [type=jsonparse path="data,publicAddress" data="$(fetch)"]
    encode_data  [type=ethabiencode abi="(bytes32 requestId, string _email, bytes32 _proof, address _publicAddress)" data="{ \\"requestId\\": $(decode_log.requestId), \\"_email\\": $(parse_email), \\"_proof\\": $(parse_proof), \\"_publicAddress\\": $(parse_publicAddress) }"]
    encode_tx    [type=ethabiencode
                  abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                  data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                 ]
    submit_tx    [type=ethtx to="%oracle%" data="$(encode_tx)"]

    decode_log -> decode_cbor -> fetch -> parse_proof -> parse_email -> parse_publicAddress -> encode_data -> encode_tx -> submit_tx
"""
